<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pawan Chaurasia</title><link>/engineering/</link><description>Recent content on Pawan Chaurasia</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 27 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="/engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Securing the websocket connection</title><link>/engineering/securing_websocket_connections/</link><pubDate>Thu, 27 Feb 2025 00:00:00 +0000</pubDate><guid>/engineering/securing_websocket_connections/</guid><description>This blog extends our previous discussion on WebSockets with FastAPI. Sure, everything worked fine, but I conveniently skipped the most important part—security. Oops! Consider this my redemption post, where I’ll dive deep into securing WebSocket connections and, of course, sneak in some crude humor because why should security be boring?</description></item><item><title>WebSockets in FastAPI: From Basics to Scaling</title><link>/engineering/websocket_in_fast_api/</link><pubDate>Tue, 18 Feb 2025 00:00:00 +0000</pubDate><guid>/engineering/websocket_in_fast_api/</guid><description>WebSockets enable real-time, bidirectional communication, perfect for chat apps, live notifications, and gaming. FastAPI, a modern Python framework, makes it easy to implement WebSockets for scalable, real-time applications. This blog walks you through setting up WebSocket connections, handling messages, and managing client-server interactions in FastAPI, with practical examples and best practices.</description></item><item><title>Own Your Work</title><link>/engineering/own_your_work/</link><pubDate>Tue, 14 Jan 2025 00:00:00 +0000</pubDate><guid>/engineering/own_your_work/</guid><description>Ownership means taking responsibility for tasks from start to finish, seeking help only after you&amp;rsquo;ve tried solving the problem yourself.</description></item></channel></rss>